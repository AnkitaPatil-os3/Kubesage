import"./index-CxdrVOSW.js";import{a as L}from"./axios-CCb-kr4I.js";import{j as K,aB as $,s as F,r,v as Q,hR as p,o as X,l as Y,a as s,b as y,w as T,t as Z}from"./index-Bby_nErz.js";const tt={name:"CpuAndSysLoadGaugeChart",components:{NSelect:$,NCard:F},setup(){const f=r(null),o=r(null),m=r(null),c=r(null),g=r(null),v=r(null),u=r(null),d=r(0),i=r(0),C=r(0);let w=null,b=null,S=null,x=null,P=null;const O=r(null),U=r(null),q=r([]),j=r([]),R=r([]),E=r(0),A=()=>{v.value&&(u.value=p(v.value))},H=async()=>{try{const e=await L.get('http://172.16.1.119:9090/api/v1/query?query=irate(node_pressure_cpu_waiting_seconds_total{instance="development-server-ashish",job="integrations/unix"}[5m])'),t=await L.get('http://172.16.1.119:9090/api/v1/query?query=irate(node_pressure_memory_waiting_seconds_total{instance="development-server-ashish",job="integrations/unix"}[5m])'),a=await L.get('http://172.16.1.119:9090/api/v1/query?query=irate(node_pressure_io_waiting_seconds_total{instance="development-server-ashish",job="integrations/unix"}[5m])');e.data.status==="success"&&(d.value=parseFloat(e.data.data.result[0].value[1])),t.data.status==="success"&&(i.value=parseFloat(t.data.data.result[0].value[1])),a.data.status==="success"&&(C.value=parseFloat(a.data.data.result[0].value[1])),I([{type:"CPU Pressure",value:d.value},{type:"Memory Pressure",value:i.value},{type:"IO Pressure",value:C.value}])}catch(e){console.error("Error fetching pressure data:",e)}},I=e=>{if(u.value){const t={title:{text:"CPU Pressure Over Time",left:"center",textStyle:{color:"#4CAF50",fontWeight:"bold",fontSize:18}},tooltip:{trigger:"axis",formatter:"{b}: {c}%"},xAxis:{type:"category",data:e.map(a=>a.type),axisLabel:{rotate:45,color:"#888"}},yAxis:{type:"value",axisLabel:{formatter:"{value}%",color:"#888"}},series:[{data:e.map(a=>a.value),type:"line",smooth:!0,itemStyle:{color:"#4CAF50"},areaStyle:{color:"rgba(76, 175, 80, 0.2)"}}]};u.value.setOption(t)}else console.error("chartInstanceCpupressure is not initialized.")},B=async e=>{try{const t=await fetch(`http://172.16.1.119:9090/api/v1/query?query=count(count(node_cpu_seconds_total{instance="${e}"}) by (cpu))`);if(!t.ok)throw new Error(`HTTP error! Status: ${t.status}`);const a=await t.json();if(a.status==="success"){const n=parseInt(a.data.result[0].value[1]);E.value=n}}catch(t){console.error("Error fetching CPU core count data:",t)}},D=async e=>{try{const t=await fetch(`http://172.16.1.119:9090/api/v1/query?query=100 * (1 - avg(rate(node_cpu_seconds_total{mode="idle", instance="${e}"}[5m])))`);if(!t.ok)throw new Error(`HTTP error! Status: ${t.status}`);const a=await t.json();if(a.status==="success"){const n=parseFloat(a.data.result[0].value[1]);h(w,n,"CPU Usage")}}catch(t){console.error("Error fetching CPU data:",t)}},J=async e=>{try{const t=await fetch(`http://172.16.1.119:9090/api/v1/query?query=scalar(node_load1{instance="${e}"}) * 100 / count(count(node_cpu_seconds_total{instance="${e}"}) by (cpu))`);if(!t.ok)throw new Error(`HTTP error! Status: ${t.status}`);const a=await t.json();if(a.status==="success"){const n=parseFloat(a.data.result[0].value[1]);h(b,n,"Sys Load")}}catch(t){console.error("Error fetching Sys Load data:",t)}},k=async e=>{try{const t=await fetch(`http://172.16.1.119:9090/api/v1/query?query=((node_memory_MemTotal_bytes{instance="${e}"} - node_memory_MemFree_bytes{instance="${e}"}) / node_memory_MemTotal_bytes{instance="${e}"}) * 100`);if(!t.ok)throw new Error(`HTTP error! Status: ${t.status}`);const a=await t.json();if(a.status==="success"){const n=parseFloat(a.data.result[0].value[1]);h(S,n,"Ram Load")}}catch(t){console.error("Error fetching Ram Load data:",t)}},V=async e=>{try{const t=await fetch(`http://172.16.1.119:9090/api/v1/query?query=100 - ((node_filesystem_avail_bytes{instance="${e}",mountpoint="/",fstype!="rootfs"} * 100) / node_filesystem_size_bytes{instance="${e}",mountpoint="/",fstype!="rootfs"})`);if(!t.ok)throw new Error(`HTTP error! Status: ${t.status}`);const a=await t.json();if(console.log(a),a.status==="success"){const n=parseFloat(a.data.result[0].value[1]);h(x,n,"Root fs Used")}}catch(t){console.error("Error fetching Sys Load data:",t)}},M=async e=>{try{const a=await(await fetch(`http://172.16.1.119:9090/api/v1/query?query=sum(irate(node_cpu_seconds_total{instance="${e}", mode="system"}[5m])) / scalar(count(count(node_cpu_seconds_total{instance="${e}"}) by (cpu)))`)).json();if(a.status==="success"){const n=a.data.result.map(l=>({cpu:`CPU ${l.metric.cpu}`,value:l.value[1]}));z(P,n)}}catch(t){console.error("Error fetching CPU bar chart data:",t)}},z=(e,t)=>{const a={xAxis:{type:"category",data:t.map(n=>n.cpu)},yAxis:{type:"value"},series:[{data:t.map(n=>n.value),type:"bar"}]};e.setOption(a)},N=async()=>{try{const e=await fetch("http://172.16.1.119:9090/api/v1/query?query=node_uname_info");if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);const t=await e.json();if(t.status==="success"){const a=new Set,n=[];t.data.result.forEach(l=>{a.add(l.metric.job),n.push({label:l.metric.instance,value:l.metric.instance,job:l.metric.job})}),q.value=Array.from(a).map(l=>({label:l,value:l})),j.value=n}}catch(e){console.error("Error fetching job and host data:",e)}},_=(e,t)=>{const a={series:[{type:"gauge",detail:{formatter:"{value}%",fontSize:20,color:"#008000"},axisLine:{lineStyle:{color:[[.3,"#67e0e3"],[.7,"#37a2da"],[1,"#fd666d"]],width:20}},pointer:{width:5,length:"60%"},data:[{value:0,name:t}]}]};e.setOption(a)},h=(e,t,a)=>{e.setOption({series:[{data:[{value:t.toFixed(2),name:a}]}]})},G=e=>{R.value=j.value.filter(t=>t.job===e),U.value=null},W=e=>{D(e),J(e),k(e),V(e),M(e),B(e)};return Q(()=>{w=p(f.value),b=p(o.value),S=p(m.value),x=p(c.value),P=p(g.value),_(w,""),_(b,""),_(S,""),_(x,""),N(),A(),H()}),{gaugeChartCpu:f,gaugeChartSysLoad:o,gaugeChartRamLoad:m,gaugeChartRootUsed:c,barChartCpu:g,cpuCoreCount:E,selectedJob:O,selectedHost:U,jobOptions:q,filteredHostOptions:R,onJobSelect:G,onHostSelect:W,lineChartCpu:v,cpuPercent:d,memPercent:i,ioPercent:C,fetchData:H}}},et={class:"dropdown-container"},at={class:"dropdown-item"},st={class:"dropdown-item"},ot={class:"panel-row"},nt={class:"panel-container"},rt={ref:"gaugeChartCpu",class:"gauge-chart"},ct={class:"panel-container"},lt={ref:"gaugeChartSysLoad",class:"gauge-chart"},it={class:"panel-container"},ut={ref:"gaugeChartRamLoad",class:"gauge-chart"},dt={class:"panel-container"},pt={ref:"gaugeChartRootUsed",class:"gauge-chart"},vt={class:"panel-row"},_t={class:"panel-container"},ht={ref:"barChartCpu",class:"bar-chart"},yt={class:"panel-container"},ft={ref:"lineChartCpu",class:"line-chart"},mt={class:"panel-container"},gt={class:"core-count-display"};function Ct(f,o,m,c,g,v){const u=$,d=F;return X(),Y("div",null,[s("div",et,[s("div",at,[o[2]||(o[2]=s("div",{class:"label-box"},"Job:",-1)),y(u,{modelValue:c.selectedJob,"onUpdate:modelValue":o[0]||(o[0]=i=>c.selectedJob=i),options:c.jobOptions,placeholder:"Select Job",style:{width:"200px"},"onUpdate:value":c.onJobSelect},null,8,["modelValue","options","onUpdate:value"])]),s("div",st,[o[3]||(o[3]=s("div",{class:"label-box"},"Host:",-1)),y(u,{modelValue:c.selectedHost,"onUpdate:modelValue":o[1]||(o[1]=i=>c.selectedHost=i),options:c.filteredHostOptions,placeholder:"Select Host",style:{width:"200px"},"onUpdate:value":c.onHostSelect},null,8,["modelValue","options","onUpdate:value"])])]),y(d,null,{default:T(()=>[s("div",ot,[s("div",nt,[o[4]||(o[4]=s("div",{class:"panel-title"},"CPU Busy",-1)),s("div",rt,null,512)]),s("div",ct,[o[5]||(o[5]=s("div",{class:"panel-title"},"Sys Load",-1)),s("div",lt,null,512)]),s("div",it,[o[6]||(o[6]=s("div",{class:"panel-title"},"RAM Load",-1)),s("div",ut,null,512)]),s("div",dt,[o[7]||(o[7]=s("div",{class:"panel-title"},"Root fs Used",-1)),s("div",pt,null,512)])])]),_:1}),y(d,null,{default:T(()=>[s("div",vt,[s("div",_t,[o[8]||(o[8]=s("div",{class:"panel-title"},"CPU Basic ",-1)),s("div",ht,null,512)]),s("div",yt,[s("div",ft,null,512)]),s("div",mt,[o[9]||(o[9]=s("div",{class:"panel-title"},"CPU Cores Count",-1)),s("div",gt,Z(c.cpuCoreCount),1)])])]),_:1})])}const xt=K(tt,[["render",Ct],["__scopeId","data-v-1c9f5029"]]);export{xt as default};
