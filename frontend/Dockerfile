# # Use Node.js 22 Alpine for the build stage
# FROM node:22-alpine as build-stage
 
# WORKDIR /app
 
# # Copy package files and install dependencies
# COPY package*.json ./
# RUN npm install
 
# # Copy the rest of the application code
# COPY . .
 
# # Build the application
# RUN npm run build
 
# # Use Nginx Alpine for the production stage
# FROM nginx:alpine as production-stage
 
# # Copy built application files from the build stage
# COPY --from=build-stage /app/dist /var/www/html
 
# # Copy Nginx configuration
# COPY nginx.conf /etc/nginx/conf.d/default.conf
 
# # Create SSL directory
# RUN mkdir -p /etc/nginx/ssl

# # Generate self-signed SSL certificates if they don't exist
# RUN apk add --no-cache openssl && \
#     openssl req -x509 -newkey rsa:4096 -nodes \
#     -keyout /etc/nginx/ssl/self-signed.key \
#     -out /etc/nginx/ssl/self-signed.crt \
#     -days 365 -subj "/CN=localhost" && \
#     chmod 644 /etc/nginx/ssl/self-signed.crt && \
#     chmod 640 /etc/nginx/ssl/self-signed.key
 
# # Expose port 9980 instead of 80/443
# EXPOSE 80 443
 
# # Start Nginx in the foreground
# CMD ["nginx", "-g", "daemon off;"]
# Use Node.js 22 Alpine for the build stage
FROM node:22-alpine as build-stage
 
WORKDIR /app
 
# Copy package files and install dependencies
COPY package*.json ./
RUN npm install
 
# Copy the rest of the application code
COPY . .
 
# Build the application
RUN npm run build
 
# Use Nginx Alpine for the production stage
FROM nginx:alpine as production-stage
 
# Copy built application files from the build stage
COPY --from=build-stage /app/dist /var/www/html
 
# Copy Nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf
 
# Create SSL directory
RUN mkdir -p /etc/nginx/ssl

# Generate self-signed SSL certificates if they don't exist
RUN apk add --no-cache openssl && \
    openssl req -x509 -newkey rsa:4096 -nodes \
    -keyout /etc/nginx/ssl/self-signed.key \
    -out /etc/nginx/ssl/self-signed.crt \
    -days 365 -subj "/CN=localhost" && \
    chmod 644 /etc/nginx/ssl/self-signed.crt && \
    chmod 640 /etc/nginx/ssl/self-signed.key
 
# Expose standard HTTP and HTTPS ports
EXPOSE 80 443
 
# Start Nginx in the foreground
CMD ["nginx", "-g", "daemon off;"]
